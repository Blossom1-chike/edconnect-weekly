[{"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\App.jsx":"3","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\Home.jsx":"4","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\Signup.jsx":"5","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\shared\\Header.jsx":"6","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\shared\\Footer.jsx":"7","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\shared\\Layout.jsx":"8","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\Login.jsx":"9","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\CreateProject.jsx":"10","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\Project.jsx":"11"},{"size":546,"mtime":1611180438852,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":783,"mtime":1611782428046,"results":"15","hashOfConfig":"13"},{"size":2822,"mtime":1612209829707,"results":"16","hashOfConfig":"13"},{"size":8285,"mtime":1612292013288,"results":"17","hashOfConfig":"13"},{"size":4328,"mtime":1612292419886,"results":"18","hashOfConfig":"13"},{"size":965,"mtime":1612206323989,"results":"19","hashOfConfig":"13"},{"size":1276,"mtime":1612207684461,"results":"20","hashOfConfig":"13"},{"size":4299,"mtime":1612291954761,"results":"21","hashOfConfig":"13"},{"size":5445,"mtime":1612213134510,"results":"22","hashOfConfig":"13"},{"size":4842,"mtime":1612213213217,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"78bly9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\index.js",[],["49","50"],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\App.jsx",[],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\Home.jsx",[],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\Signup.jsx",["51"],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\shared\\Header.jsx",[],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\shared\\Footer.jsx",[],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\shared\\Layout.jsx",[],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\Login.jsx",[],"C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\CreateProject.jsx",["52"],"//import statement used to import react and react-bootstrap components\r\nimport React, { useState,useEffect } from 'react';\r\nimport Layout from './shared/Layout';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {getCookie} from './shared/Header';//imports getCookie function from the Header component\r\nimport { Form,InputGroup,Button,Alert } from 'react-bootstrap';\r\n\r\n//functional component CreateProject\r\nconst CreateProject = () => {\r\n\r\n    //declaration of states and theri corresponding function used to update the states\r\n    const [name,setName] = useState('');\r\n    const [abstract,setAbstract] = useState();\r\n    const [authors,setAuthors] = useState([]);\r\n    const [tags,setTags] = useState([]);\r\n    const [errors,setErrors] = useState();\r\n    let history = useHistory();\r\n\r\n    //function which is used to handle changes made to the input field such as typind a value\r\n    const handleInputChange = (event) => {\r\n\r\n        //destructing the argument value gotten from the event\r\n        const {name,value} = event.target;\r\n\r\n        //updates the state based on the name gotten from the event \r\n        switch(name){\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'abstract':\r\n                setAbstract(value);\r\n                break;\r\n            case 'authors':\r\n                setAuthors(value.split(\",\"));\r\n                break;\r\n            case 'tags':\r\n                setTags(value.split(\" \"));\r\n                break;\r\n            default://if none of the names matches \r\n        }\r\n    }\r\n    //a useEffect hook used to redirect to the login page if there is no cookie\r\n    //this useEffect hook runs only once\r\n    useEffect(() => {\r\n        if(getCookie(\"uid\") === \"\"){\r\n            history.push(\"/login\");\r\n        }\r\n    },[])\r\n\r\n    //function createProject creates an object called data which contains the value\r\n    //of all inputs entered into the input fields and then send the data object\r\n    //to the server and waits for a response. If the response is ok, it redirects to the \r\n    //home page but if the response is not ok, it displays the error gotten from the server\r\n    //in an Alert tag.\r\n    function createProject () {\r\n        const data = {\r\n        \"name\" : name,\r\n        \"abstract\" : abstract,\r\n        \"authors\" : authors,\r\n        \"tags\" : tags\r\n    };\r\n    console.log(data);\r\n\r\n    fetch(\"/api/projects\",{\r\n        method:'POST',\r\n        body:JSON.stringify(data),\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n        },\r\n    }).then(async(response)=>{\r\n        var data =  await response.json();\r\n       \r\n        if(data.status === 'ok'){\r\n            history.push(\"/\")\r\n        }else if(data.status !== 'ok'){\r\n            setErrors(data.errors);\r\n        }\r\n    })\r\n    }\r\n\r\n    /*This return indicates the value returned to the App.jsx file and is rendered on the screen\r\n      It contains react bootstrap components, styling, and also basic html tags\r\n      The <Layout></Layout> is a component that houses the header(navbar), the main content(which is what is returned),\r\n      and the Footer\r\n    */\r\n    return (\r\n        <>\r\n            <Layout>\r\n                    <Form id=\"createProjectForm\" className=\"p-3\" style={{marginLeft:'350px',marginRight:'350px'}}>\r\n                        <h3>Submit Project</h3>\r\n                        {errors ?<Alert variant=\"danger\"style={{marginLeft:'0px', marginRight:'0px'}}>{errors.map((error) => <span key={error}>{error} <br/></span>)}</Alert>:null}\r\n                            <Form.Label>Project Name:</Form.Label><br />\r\n                            <InputGroup>\r\n                                <Form.Control name=\"name\" value={name} id=\"projectName\" placeholder=\"Enter Project Name\" onChange={handleInputChange}/>\r\n                            </InputGroup><br/>\r\n                        \r\n                            <Form.Label>Project Abstract: </Form.Label><br />\r\n                            <InputGroup>\r\n                                <Form.Control as = \"textarea\" name=\"abstract\" value={abstract} id=\"projectAbstract\" rows=\"4\" cols=\"100\" onChange={handleInputChange}/>\r\n                            </InputGroup>\r\n                            <br/>\r\n                            \r\n                            <Form.Label>Author(s): </Form.Label><br />\r\n                            <InputGroup>\r\n                                <Form.Control type=\"text\" value={authors} name=\"authors\" id=\"projectAuthors\" placeholder=\"Enter author names (seperated by comma)\" onChange={handleInputChange}/>\r\n                            </InputGroup><br/>\r\n                            \r\n                            <Form.Label>Tag(s): </Form.Label><br />\r\n                            <InputGroup>\r\n                                <Form.Control type=\"text\" value={tags} name=\"tags\" id=\"projectTags\" placeholder=\"Use # to tag project with different topics (e.g #javascript #mongodb)\" onChange={handleInputChange}/>\r\n                            </InputGroup><br/>\r\n                           \r\n                            <Button variant=\"primary\" id=\"continue\" onClick={createProject}>Continue</Button>\r\n        \r\n                    </Form>\r\n            </Layout>\r\n        </>\r\n    )//end of return statement\r\n}//end of component CreateProject\r\nexport default CreateProject;//exports the component CreateProject so that it can be imported from another component","C:\\Users\\HP\\Desktop\\Project\\edconnect-weekly\\app\\web\\src\\Project.jsx",["53"],"//import statement used to import react and react-bootstrap components\r\nimport React,{useState,useEffect} from 'react';\r\nimport Layout from './shared/Layout';//import Layout component from the shared folder\r\nimport {useParams} from 'react-router-dom';\r\nimport { Jumbotron, Card,Row,Col,Container,Button,ListGroup } from 'react-bootstrap';\r\n\r\n//functional component Project\r\nconst Project = () => {\r\n    const {id} = useParams();//useParams is used to get the expression starting from the name \"id\" from the current url\r\n    const id_value = id.substring(3);//it is used to get the value from the id by deleting the first 3 characters\r\n    //declaration of states and their corresponding functions used to update the states\r\n    const [data,setData] = useState({});\r\n    const [authors,setAuthors] = useState([]);\r\n    const [projectData,setProjectData] = useState('');\r\n\r\n    //this function is used to get the name of the author that wrote the project from the user details\r\n    //by making a get request to fetch the user with the specified id\r\n    function getProjectName(id) {\r\n        \r\n        fetch(`/api/users/${id}`).then(async(response)=>{\r\n            var data = await response.json();\r\n            setProjectData(data);\r\n        })\r\n    }\r\n\r\n    //the useEffect hook contains a fetch request used to get the project details of a particular project \r\n    //using the id_value gotten. this useEffect hook runs only once.\r\n    useEffect(() => {\r\n    fetch(`/api/projects/${id_value}`).then(async (response)=>{\r\n        var data = await response.json();\r\n        getProjectName(data.createdBy)//gets ProjectName using the value of createdBy gotten from the response\r\n        setAuthors(data.authors)//sets project authors to all authors gotten from the response\r\n        setData(data);//sets data to the response gotten\r\n        \r\n    })\r\n    },[])\r\n    /*This return statement indicates the value returned to the App.jsx file and is rendered on the screen\r\n      It contains react bootstrap components, styling, and also basic html tags\r\n      The <Layout></Layout> is a component that houses the header(navbar), the main content(which is what is returned),\r\n      and the Footer\r\n    */\r\n    return (\r\n\r\n        <>\r\n        <Layout>\r\n        <h2 class=\"view_h2\" id=\"project_name\" className=\"p-2\" style={{marginLeft:'70px',marginRight:'60px'}}>{data.name}</h2>\r\n\r\n        <Jumbotron className=\"p-2\" style={{marginLeft:'70px',marginRight:'60px'}}>\r\n            \r\n            <Row class=\"row\" className=\"pl-4 pt-1\">\r\n                <Col className=\"pl-4 pt-1\" id=\"project_author\">Created By: <br/> {projectData.firstname + \" \" + projectData.lastname}</Col>\r\n                <Col className=\"pl-4 pt-1\">Date Created : <br/> 2020-08-04</Col>\r\n                <Col className=\"pl-4 pt-1\">Last Updated : <br/> 2020-08-04</Col>\r\n                <Col className=\"pl-4 pt-1\"><a href=\"editProject.html\" class=\"btn btn-primary\">Edit Project</a></Col>\r\n            </Row>\r\n        </Jumbotron>\r\n\r\n        <Container class=\"container\">\r\n            <Row class=\"row\">\r\n                <Col class=\"col\">\r\n                    <h5>Project Abstract</h5>\r\n                    <hr/>\r\n                    <p id=\"project_abstract\">{data.abstract}</p>\r\n                    <h5>Comments</h5>\r\n                    <textarea class= \"form-control\" rows=\"5\"></textarea>\r\n                    <Button id=\"view_submit\" class=\"btn btn-primary\">Submit</Button>\r\n                    <hr/>\r\n                    <p class=\"text-center\">No comments yet</p>\r\n                </Col>\r\n                \r\n                <Col class=\"col\">\r\n                    <h5>Project Details</h5>\r\n                    <hr/>\r\n\r\n                    <Card id=\"project_authors\" class=\"card\">\r\n                        <Card.Header class=\"card-header\">Authors</Card.Header>\r\n                        <ListGroup>\r\n                            {authors && authors.map(author => (\r\n                                <ListGroup.Item>{author}</ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                            <Card.Footer class=\"card-footer text-primary\" id=\"project_tags\">{data.tags}</Card.Footer>\r\n                    </Card><br/>\r\n\r\n                     <Card class=\"card\">\r\n                        <Card.Header class=\"card-header\">Project Files</Card.Header>\r\n                        <Card.Body class=\"card-body text-center\">\r\n                            <Card.Text class=\"card-text text-muted\">No file uploaded yet</Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </Layout>\r\n        </>\r\n    );//end of return statement\r\n}//end of component\r\nexport default Project;//exports Project component so that it can be imported from another component.",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":41,"column":7,"nodeType":"60","endLine":41,"endColumn":9,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"59","line":48,"column":7,"nodeType":"60","endLine":48,"endColumn":9,"suggestions":"62"},{"ruleId":"58","severity":1,"message":"63","line":36,"column":7,"nodeType":"60","endLine":36,"endColumn":9,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["67"],["68"],"React Hook useEffect has a missing dependency: 'id_value'. Either include it or remove the dependency array.",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"70","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [history]",{"range":"75","text":"76"},{"range":"77","text":"76"},"Update the dependencies array to be: [id_value]",{"range":"78","text":"79"},[1611,1613],"[history]",[1815,1817],[1853,1855],"[id_value]"]